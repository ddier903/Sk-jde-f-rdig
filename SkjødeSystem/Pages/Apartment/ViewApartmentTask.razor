@page "/viewapartmenttask/{apartmentId}/{address}"
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject ITaskService TaskService
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<head>
    <link href="css/viewapartmenttask.css" rel="stylesheet" />
</head>


<h1 class="title">Opgaveliste for @address</h1>

<div class="button-container">
    <button class="btn btn-primary" @onclick="() => NavigateToCreateTask(apartmentId)">Opret Opgave</button>
</div>

<h3 class="contact-title">Kontaktoplysninger</h3>

<div class="contact-container">
<table class="contact-table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Navn</th>
            <th>Nummer.</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var contact in contacts)
        {
            <tr>
                <td>@contact.Id</td>
                <td>@contact.Name</td>
                <td>@contact.Phone</td>
            </tr>
        }
    </tbody>
</table>
</div>

@if (tasks == null || !tasks.Any())
{
    <p>Ingen opgaver fundet for denne lejlighed.</p>
}
else
{
    <div class="table-container">
        <table class="content-table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Navn</th>
                    <th>Status</th>
                    <th>Udføres af</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in tasks)
                {
                    <tr>
                        <td>@task.TaskId</td>
                        <td>@task.TaskName</td>
                        <td>@task.Status</td>
                        <td>@task.AssignedTo?.SubcontractorName</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    [Parameter]
    public string apartmentId { get; set; }

    [Parameter]
    public string address { get; set; }

    private List<TaskItem> tasks = new List<TaskItem>();
    private Admin? currentUser;

    protected override async Task OnInitializedAsync()
    {
        //Tjekker nuværende bruger:
        currentUser = await localStorage.GetItemAsync<Admin>("user");
        if (currentUser == null || currentUser.Role != "Admin")
        {
            NavigationManager.NavigateTo("/login");
        }

        // Brug TaskService i stedet for HttpClient
        tasks = await TaskService.GetTasksByApartmentId(apartmentId);

        if (tasks == null || !tasks.Any())
        {
            Console.WriteLine($"No tasks found for Apartment ID: {apartmentId}");
        }
    }
    //navigere til opret opgave 
    private void NavigateToCreateTask(string apartmentId)
    {
        NavigationManager.NavigateTo($"/createtask/{apartmentId}");
    }
    private List<Contact> contacts = new List<Contact>
    {
        new Contact { Id = 1, Name = "John Doe", Phone = "123-456-7890" }
    };

    public class Contact
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Phone { get; set; }
    }
}
       
